import discord
from discord.ext import commands, tasks
from discord import app_commands
import asyncio
import datetime
import requests
import sqlite3

conn = sqlite3.connect("users.db")  # –∏–ª–∏ –ø—É—Ç—å –∫ —Ç–≤–æ–µ–π –±–∞–∑–µ, –µ—Å–ª–∏ –æ–Ω –¥—Ä—É–≥–æ–π
cur = conn.cursor()

# cur.execute("ALTER TABLE users ADD COLUMN country TEXT")
conn.commit()
conn.close()

print("–ì–æ—Ç–æ–≤–æ!")

from config import TOKEN, GUILD_ID, VOICE_CHANNEL_ID, TEXT_CHANNEL_ID, MP3_FILE, OPENWEATHERMAP_API_KEY
from db import init_db, set_user_city, get_user_city, get_all_users
from weather import get_weather

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!", intents=intents)
tree = bot.tree

voice_client = None

@bot.event
async def on_ready():
    print(f"‚úÖ –ó–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")
    await tree.sync(guild=discord.Object(id=GUILD_ID))
    init_db()

    await connect_to_voice()
    await play_sound()

    hourly_weather_loop.start()

async def connect_to_voice():
    global voice_client
    guild = bot.get_guild(GUILD_ID)
    channel = guild.get_channel(VOICE_CHANNEL_ID)
    if channel:
        try:
            if bot.voice_clients:
                await bot.voice_clients[0].disconnect(force=True)
            voice_client = await channel.connect()
            await asyncio.sleep(1)
            await play_sound()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: {e}")

async def play_sound():
    global voice_client
    if voice_client and voice_client.is_connected():
        if not voice_client.is_playing():
            voice_client.play(discord.FFmpegPCMAudio(MP3_FILE))

# –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∫–∏–∫–µ –∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏
@bot.event
async def on_voice_state_update(member, before, after):
    if member.id == bot.user.id:
        if after.channel is None or after.channel.id != VOICE_CHANNEL_ID:
            await asyncio.sleep(1)
            await connect_to_voice()

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: —Ç–æ–ª—å–∫–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
def is_in_designated_text_channel(interaction: discord.Interaction) -> bool:
    return interaction.channel.id == TEXT_CHANNEL_ID

# –ö–æ–º–∞–Ω–¥–∞: —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω—É
@tree.command(name="city", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∞—à –≥–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω—É", guild=discord.Object(id=GUILD_ID))
@app_commands.describe(city="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞", country="–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É")
async def set_city(interaction: discord.Interaction, city: str, country: str):
    if not is_in_designated_text_channel(interaction):
        await interaction.response.send_message("‚ùå –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        return

    set_user_city(interaction.user.id, city, country)  # –¢–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç—Ä–µ–º—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
    await interaction.response.send_message(f"‚úÖ –í–∞—à –≥–æ—Ä–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ **{city}, {country}**.", ephemeral=True)


# –ö–æ–º–∞–Ω–¥–∞: —Ç–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞
@tree.command(name="weather", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É", guild=discord.Object(id=GUILD_ID))
async def show_weather(interaction: discord.Interaction):
    if not is_in_designated_text_channel(interaction):
        await interaction.response.send_message("‚ùå –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Ç–æ–ª—å–∫–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        return

    city, country = get_user_city(interaction.user.id)
    if not city or not country:
        await interaction.response.send_message("‚ùå –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω—É –∫–æ–º–∞–Ω–¥–æ–π `/city <–≥–æ—Ä–æ–¥> <—Å—Ç—Ä–∞–Ω–∞>`.", ephemeral=True)
        return

    forecast = await get_weather(city, country)
    await play_sound()
    await interaction.response.send_message(f"üì° –ü–æ–≥–æ–¥–∞ –¥–ª—è **{city}, {country}**:\n{forecast}", ephemeral=True)

# –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –∫–∞–∂–¥—ã–π —á–∞—Å
@tasks.loop(seconds=1)
async def hourly_weather_loop():
    now = datetime.datetime.utcnow() + datetime.timedelta(hours=3)  # –ú–°–ö
    if now.minute == 0 and now.second == 0:
        await play_sound()

        users = get_all_users()
        channel = bot.get_channel(TEXT_CHANNEL_ID)

        for user_id, city, country in users:
            forecast = await get_weather(city, country)
            try:
                await channel.send(f"\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ãÜ‚ãÖ‚òÜ‚ãÖ‚ãÜ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")
                await channel.send(f"<@{user_id}> üóº –ü–æ–≥–æ–¥–∞ –¥–ª—è **{city}, {country}**:\n{forecast}")
                await channel.send(f"\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ãÜ‚ãÖ‚òÜ‚ãÖ‚ãÜ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–≥–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

bot.run(TOKEN)
